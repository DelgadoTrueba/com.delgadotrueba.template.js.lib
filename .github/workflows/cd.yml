name: CD

on:
  push:
    branches: [main]

permissions:
  contents: write # ← necesario para crear/pushear tags
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Lint, Test, Sonar and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛬
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.11.0 --activate

      - name: Install dependencies 📦
        run: pnpm install --frozen-lockfile

      - name: Configurar .npmrc 📦
        run: |
          rm -f .npmrc
          npm config set registry https://registry.npmjs.org
          npm config set @delgadotrueba:registry https://npm.pkg.github.com/
          npm config set //npm.pkg.github.com/:_authToken=${PKG_TOKEN}
          npm config set save-exact true
        env:
          PKG_TOKEN: ${{ secrets.PKG_TOKEN }}

      - name: Leer versión de package.json 🔎
        id: version
        run: |
          VER=$(node -p "require('./package.json').version")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VER"
          echo "version=$VER"   >> $GITHUB_OUTPUT
          echo "major=$MAJOR"   >> $GITHUB_OUTPUT
          echo "minor=$MINOR"   >> $GITHUB_OUTPUT
          echo "patch=$PATCH"   >> $GITHUB_OUTPUT
          echo "VERSION=$VER"   >> $GITHUB_ENV
          echo "MAJOR=$MAJOR"   >> $GITHUB_ENV
          echo "MINOR=$MINOR"   >> $GITHUB_ENV
          echo "PATCH=$PATCH"   >> $GITHUB_ENV

      - name: Crear/actualizar tags 🏷️
        id: tag_version
        run: |
          set -e
          git fetch --tags --force
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          FULL_TAG="v${VERSION}"
          MAJOR_TAG="v${MAJOR}"
          MINOR_TAG="v${MAJOR}.${MINOR}"

          if git rev-parse -q --verify "refs/tags/${FULL_TAG}" >/dev/null; then
            echo "created=false" >> "$GITHUB_OUTPUT"
            echo "El tag ${FULL_TAG} ya existe, no se crea de nuevo."
          else
            git tag -a "$FULL_TAG" -m "Release $FULL_TAG"
            git push origin "$FULL_TAG"
            echo "created=true" >> "$GITHUB_OUTPUT"
            echo "Creado $FULL_TAG."
          fi

          # (Re)apuntar tags flotantes siempre al commit actual
          for T in "$MAJOR_TAG" "$MINOR_TAG"; do
            git tag -fa "$T" -m "Release $T -> $FULL_TAG"
            git push origin "$T" --force
            echo "Actualizado $T -> $FULL_TAG"
          done

      - name: Publish to NPM 🚀
        run: pnpm publish --no-git-checks

      - name: Size 📏
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_step: install
          script: pnpm exec size-limit --json

      - name: SonarCloud scan 🔍
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit de release 📝
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add package.json CHANGELOG.md
          git commit -m "chore(release): v${VERSION}"
          git push origin HEAD:main

      - name: Merge main → develop 🔀
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Trae ambas ramas del remoto
          git fetch origin main develop --prune

          # Crear/actualizar rama local desde el remoto
          git checkout -B develop origin/develop

          # Mezcla los últimos cambios de main en develop
          git merge --no-ff --no-edit origin/main

          # Empuja develop actualizado
          git push origin HEAD:develop
